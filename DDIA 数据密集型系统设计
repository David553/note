# 数据库核心数据结构
尾追加的方式实现数据存储

```
#!/bin/bash
db_set() {
  echo "$1,$2" >> database //尾部追加
}

db_get(){
  grep "^$1," database | sed -e "s/^$1,//" | tail -n 1 // 尾部获取
}
```
`db_set` 函数对于极其简单的场景其实有非常好的性能，因为在文件尾部追加写入通常是非常高效的。与 `db_set` 做的事情类似，许多数据库在内部使用了 **日志（log）**，也就是一个 **仅追加（append-only）** 的数据文件。真正的数据库有更多的问题需要处理（如并发控制，回收硬盘空间以避免日志无限增长，处理错误与部分写入的记录），但基本原理是一样的。日志极其有用，我们还将在本书的其它部分重复见到它好几次。

> **日志（log）** 这个词通常指应用日志：即应用程序输出的描述正在发生的事情的文本。本书在更普遍的意义下使用 **日志** 这一词：一个仅追加的记录序列。它可能压根就不是给人类看的，它可以使用二进制格式，并仅能由其他程序读取。

## 哈希索引
k-v 键-值存储
内存保存hashMap，每个键一一映射到数据文件特定的字节偏移量

# 事务处理与分析处理

# 列示存储
 
# 小结
